MVC en PHP natif
****************

Routeur
*******
Redirige les requête vers le bon Controller
=> index.PHP

Plusieurs blocs MVC
*******************
1 bloc / fonctionnalité
ex: Commandes, Sécurité, Stock,...

Structure d'une application
***************************
Site
    --> index.php (point d'entrée de l'application + routeur)
    --> contoller (contient tous les controlleurs)
    --> model (conteint tous les models)
    --> view (conteint les vues de l'application)


Création du routeur
*******************
=> réagit en fonction des URL
=> Placer dans l'URL une information qui permet au routeur de savoir vers quel controller envoyer la requête

 URL envoyée à l'appli:localhost/m2i/mvc_store/index.php?action=getAllProd

C'est le paramètre action qui sera passé dans $_GET qui permet de router la demande de l'utilisateur

N@V          Index.php (routeur)       controller        Model      View          
 Req ->>>>>>>>>>>
               action=getAllProd 
                                    -->>>>ctlProduit 
                                                 ->>>>getAllProd
                                                                                                                                            ->>>>>show_prods.php  



Création d'une nouvelle catégorie
*********************************

Besoins:
1 formulaire
1 fonction dans controller des catégories
1 action dans index.php
1 fonction dans le modèle catégorie

problème:
On ne peut faire le traitement du foemulaire sur la page qui affiche le formulaire. Sinon on casse le modèle MVC.
=> Le N@V s'adresse directement au modèle

Solution:
On décompose la création de la catégorie en 2 étapes

Etape A 
********
=> Utilisateur envoi une req "créer catégorie"
=> Routeur appelle dans le controleur catégorie une fonction
=> Controlleur envoie la vue avec le formulaire

Etape B 
*******
=> l'utilisateur envoi le formulaire (les données sont dans $_POST[])
=> Le routeur appelle une fonction dans le controleur catégorie
=> Le controleur demande au modèle de créer la catégorie dans la Bdd
=> Le controleur renvoie l'utilisateur sur la page des catégories
=> L'utilisateur voit la nouvelle catégorie dans la liste


Amélioration de la  vue des produits
************************************

But => afficher le nom des catégories à la place de l'id des catégories

1°) Ajouter un attribut categorieName dans la classe produits

2°) Nouvelle méthode dans le model Produit pour avoir les produit avec le nom de la catégorie à laquelle ils appartiennent

3°) Modifier la vue des produits
    => Remplacer l'id catégorie par le nom catégorie


Création d'un nouveau produit
*****************************
1°) Ajouter Un bouton "Créer produit" sur la page des produits
    => Uniquement si 'ADMIN' ou 'USER' connecté

2°) Ajouter action create_prod dans index.php

3°) Créer fonction de création de produit dans ctlProduits
    a) Requête qui récupère la liste des catégories
    b) Afficher le formulaire (avec les catégories)
    c) Traitement du formulaire => Création du nouveau produit dans la Bdd

4°) Retour sur la liste des produits


Gestion des utilisateurs
************************
A) Permettre l'enregistrement d'un utilisateur

B) SI ADMIN
    => Voir les comptes utilisateurs
    => Supprimer  et modifier des comptes

=> Créer le controller ctlUser.hp
=> Ajouter les fonctions dans le controller
=> Ajouter les fonctions dans le model User 
=> Ajouter un lien "Utilisateur" dans la NaV si ADMIN
=> Les vues (Afficher les utilisateurs, Modifier,..)
=> Créer un formulaire d'enregistrement
=> Par défaut un utilisateur sera créer avec le statut 'CLIENT'.

ATTENTION:
Le fait de ne pas montrer le lien 'Utilisateur' ne suffit pas à la protection.
SI on connait l'URL d'accès aux utilisateurs on peut rentrer même sans être authentifier.


Il faut renforcer le contrôle d'accès
On va ajouter des contrôles au niveau du routeur car c'est lui le point d'entrée pour toutes les actions.

=> On va mettre en place un firewall
1°) Créer une liste "access List"
 => Association Route / Role d'utilisateur

 2°) Dans le controller security On ajoute une fonction qui dira accès authorisé ou accès interdit

 3°) On appelle la fonction de contrôle là où on a besoin de faire un conrôle d'accès.


Gestion d'un panier
*******************
On va construire le panier dans $_SESSION

 1°) Créer un controleur ctlCart
    Ajout, suppression, modification

2°) Créer les vues panier

3°) AJouter les actions dans le routeur

Modèle du panier
=> Panier = 1 tableau associatif dans $_SESSION
=> 1 élément du panier : prodId => Qty

$_SESSION['panier'] = [1=>2, 3=>1];
$_SESSION['panier'][3]++; => [1=>2, 3=>2]

4°) Ajouter dans controller et Model Produit 
Les fonctions pour récupérer les infos produits en fonction de $_SESSION['panier']

5°) Créer la page panier avec les infos produits

            Nom     Qty     Prix_total (Qty * Prix)
